{{- if index .Values "postgresql-ha" "pgpool" "generateSecret" }}
{{- $existingSecret := index .Values "postgresql-ha" "pgpool" "existingSecret" -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $existingSecret }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace $existingSecret) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $adminPasswordSecret to existing secret data or generate a random one when not exists
  {{- $adminPasswordSecret := (get $secretData $existingSecret) | default (randAlphaNum 32 | b64enc) }}
  admin-password: {{ $adminPasswordSecret | quote }}
{{- end }}
