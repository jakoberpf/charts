replicaCount: 1

image:
  repository: vaultwarden/server # TODO Build own image jakoberpf/vaultwarden
  pullPolicy: Always
  tag: "1.24.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

app:
  domain: https://vaultwarden.example.com
  websocket_enabled: true
  show_password_hint: false
  web_vault_enabled: true
  smtp:
    host: smtp.example.com
    from: vaultwarden@example.de
    port: '587'
    ssl: true
  signups:
    allowed: false
    verify: true
    domains_whitelist: example.com

persistence:
  enabled: false
  pv:
    create: false
    name: vaultwarden-pv
  pvc: 
    name: vaultwarden-pvc

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Specifies whether a service account should be associated with role bindings and access controlls
  rbac:
    enabled: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  http:
    port: 80
  websocket:
    port: 3012

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
    # - host: vaultwarden.example.com
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
    #   tls: # use for istio gateway tls
    #     mode: SIMPLE
    #     secretName: vaultwarden.example.de
  tls: [] # use for kubernetes ingress tls
  #  - secretName: vaultwarden.example.de
  #    hosts:
  #      - vaultwarden.example.com
  istioGateway:
    enabled: false
    annotations: {}
  certManager:
    enabled: false
    # issuerRef: 
    #   name: cloudflare-letsencrypt-prod
    #   kind: ClusterIssuer
    annotations: {}

resources:
  requests:
    memory: "64Mi"
    cpu: "250m"
  limits:
    memory: "128Mi"
    cpu: "500m"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
