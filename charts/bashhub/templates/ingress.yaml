{{- if and .Values.ingress.enabled ( not .Values.ingress.istioGateway.enabled ) -}}
{{- $fullName := include "bashhub.fullname" . -}}
{{- $svcPort := .Values.service.port -}}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.className}}
  {{- end }}
{{- end }}

{{- if semverCompare ">=1.19-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1
{{- else if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "bashhub.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if and .Values.ingress.className (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion) }}
  ingressClassName: {{ .Values.ingress.className }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if and .pathType (semverCompare ">=1.18-0" $.Capabilities.KubeVersion.GitVersion) }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if semverCompare ">=1.19-0" $.Capabilities.KubeVersion.GitVersion }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}

{{- if and .Values.ingress.enabled .Values.ingress.istioGateway.enabled -}}
{{- $root := . -}}
{{- $fullName := include "bashhub.fullname" . -}}

---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "bashhub.labels" . | nindent 4 }}
  {{- with .Values.ingress.istioGateway.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}  
spec:
  selector:
    istio: ingressgateway
  servers:
    {{- range .Values.ingress.hosts }}
    {{- $item := . -}}
    {{- with $ }}
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - {{ $item.host }}
      {{- if or $item.tls $root.Values.ingress.certManager.enabled }}
        {{- if $item.tls.redirect }}
      tls:
        httpsRedirect: true
        {{- end }}
    - port:
        number: 443
        name: https
        protocol: HTTPS
      tls:
        mode: {{ $item.tls.mode | default "SIMPLE" }}
        credentialName: {{ $item.tls.secretName | default $item.host }}
      hosts:
        - {{ $item.host }}
      {{- end }}
    {{- end }}
    {{- end }}

---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "bashhub.labels" . | nindent 4 }}
  {{- with .Values.ingress.istioGateway.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}  
spec:
  hosts:
    {{- range .Values.ingress.hosts }}
    - {{ .host }}
    {{- end }}
  gateways:
    - {{ $fullName }}
  http:
    - match:
      - uri:
          prefix: /
      route:
      - destination:
          port:
            number: 80
          host: {{ $fullName }}
{{- end }}

{{- if .Values.ingress.certManager.enabled -}}
{{- $root := . -}}
{{- $fullName := include "bashhub.fullname" . -}}
{{- $certManagerLabels := include "bashhub.labels" . -}}
{{- range .Values.ingress.hosts }}

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .host }}
  labels:
    {{- $certManagerLabels | nindent 4 }}
  {{- with $root.Values.ingress.certManager.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  secretName: {{ .host }}
  issuerRef:
    name: {{ $root.Values.ingress.certManager.issuerRef.name }}
    kind: {{ $root.Values.ingress.certManager.issuerRef.kind | default "ClusterIssuer" }}
  commonName: {{ .host }}
  dnsNames:
    - {{ .host }}

{{- end }}
{{- end }}