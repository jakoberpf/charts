replicaCount: 1

nfs-server-provisioner:
  deploy: true

mysql:
  deploy: true
  image:
    tag: "5.7"
    debug: true
  auth:
    # database: onlyoffice
    existingSecret: mysql-credentials
  # initdbScriptsConfigMap: mysql-init-db
  primary:
    configuration: |-
      [mysqld]
      sql_mode = 'NO_ENGINE_SUBSTITUTION'
      max_connections = 1000
      max_allowed_packet = 1048576000
      group_concat_max_len = 2048
      default_authentication_plugin=mysql_native_password
      skip-name-resolve
      explicit_defaults_for_timestamp=true
      basedir=/opt/bitnami/mysql
      plugin_dir=/opt/bitnami/mysql/lib/plugin
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      datadir=/bitnami/mysql/data
      tmpdir=/opt/bitnami/mysql/tmp
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
      log-error=/opt/bitnami/mysql/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      slow_query_log=0
      slow_query_log_file=/opt/bitnami/mysql/logs/mysqld.log
      long_query_time=10.0

      [client]
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mysql/lib/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid

    # existingConfigmap: mysql-config-db

rabbitmq:
  deploy: false
  metrics:
    enabled: true

redis:
  deploy: false
  architecture: standalone
  auth:
    enabled: false
  metrics:
    enabled: true

postgresql:
  deploy: false
  primary:
    initdb:
      scriptsConfigMap: postgresql-init-db-scripts
  auth:
    database: postgres
  metrics:
    enabled: true

prometheus:
  deploy: false

prometheus-statsd-exporter:
  deploy: false
  statsd:
    udpPort: 8125
    tcpPort: 8126
    eventFlushInterval: 30000ms

documentserver:
  enabled: false
  securityContext:
    enabled: true
  persistence:
    existingClaim: ds-files
  connections:
    dbExistingSecret: onlyoffice-postgresql

enabled:
  community: true
  controlpanel: true
  documents: true
  mail: true

jwt:
  enabled: true
  header: "AuthorizationJwt"
  secret: "SNl5Wl+HgQPDqoTFH5SgfnWPZqXkycx6yexQXDBffij4vAfgPZlW9lSE0+5XQ9oP"

image:
  community:
    # repository: jakoberpf/onlyoffice-communityserver
    repository: onlyoffice/communityserver
    pullPolicy: Always
    tag: "latest"
  controlpanel:
    # repository: jakoberpf/onlyoffice-controlpanel
    repository: onlyoffice/controlpanel
    pullPolicy: Always
    tag: "latest"
  documents:
    # repository: jakoberpf/onlyoffice-documentserver
    repository: onlyoffice/documentserver
    pullPolicy: Always
    tag: "latest"
  mail:
    # repository: jakoberpf/onlyoffice-mailserver
    repository: onlyoffice/mailserver
    pullPolicy: Always
    tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

persistence:
  enabled: true
  storageClass: "nfs"
  size: "200Mi"
  
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  privileged: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  community:
    type: ClusterIP
    ports: 
      http: 80
      https: 443
      websocket: 5222
  controlpanel:
    type: ClusterIP
    ports:
      http: 80
      https: 443
  documents:
    type: ClusterIP
    ports:
      http: 80
      https: 443
  mail:
    type: ClusterIP
    ports:
      smtp: 25
      imap: 143
      smtptls: 587

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
