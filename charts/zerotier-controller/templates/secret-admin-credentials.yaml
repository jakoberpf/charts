{{- if .Values.ui.admin.generate }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.ui.admin.secretName }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  username: {{ "admin" | b64enc | quote }}
  # retrieve the secret data using lookup function and when not exists, return an empty dictionary / map as result
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace .Values.ui.admin.secretName) | default dict }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  # set $jwtSecret to existing secret data or generate a random one when not exists
  {{- $jwtSecret := (get $secretData .Values.ui.admin.secretName) | default (randAlphaNum 32 | b64enc) }}
  password: {{ $jwtSecret | quote }}
{{- end }}
