replicaCount: 1

image:
  repository: anonaddy/anonaddy
  pullPolicy: Always
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

app:
  domain: https://anonaddy.example.com

mariadb:
  enabled: true
  image:
    repository: mariadb
    pullPolicy: Always
    tag: "10.5"
  host: ""
  persistence:
    enabled: false
    pv:
      create: false
      name: anonaddy-mariadb-pv
    pvc: 
      name: anonaddy-mariadb-pvc

redis:
  enabled: true
  image:
    repository: redis
    pullPolicy: Always
    tag: "4.0"
  host: ""
  persistence:
    enabled: false
    pv:
      create: false
      name: anonaddy-redis-pv
    pvc: 
      name: anonaddy-redis-pvc

persistence:
  enabled: false
  pv:
    create: false
    name: anonaddy-pv
  pvc: 
    name: anonaddy-pvc

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Specifies whether a service account should be associated with role bindings and access controlls
  rbac:
    enabled: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  mail:
    port: 25
  http:
    port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
    # - host: anonaddy.example.com
  tls:
    enabled: false
    redirect: false
    mode: SIMPLE
    # secretName: anonaddy-tls
  istioGateway:
    enabled: false
    annotations: {}
  certManager:
    enabled: false
    # issuerRef: 
    #   name: cloudflare-letsencrypt-prod
    #   kind: ClusterIssuer
    annotations: {}

resources:
  requests:
    memory: "64Mi"
    cpu: "250m"
  limits:
    memory: "128Mi"
    cpu: "500m"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
