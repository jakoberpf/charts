# Default values for vault.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 8200

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
    # - host: vault.example.com
  tls:
    enabled: false
    redirect: false
    mode: SIMPLE
    # secretName: vault-tls
  istioGateway:
    enabled: false
    annotations: {}
  certManager:
    enabled: false
    # issuerRef: 
    #   name: cloudflare-letsencrypt-prod
    #   kind: ClusterIssuer
    annotations: {}

vault:
  server:
    dataStorage:
      enabled: false
    dev:
      enabled: false
    ui:
      enabled: true
    standalone:
      enabled: "-"
      # config is a raw string of default configuration when using a Stateful
      # deployment. Default is to use a Consul for its HA storage backend.
      # This should be HCL.
      config: |
        ui = true
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
        }
        storage "s3" {
          region     = "eu-central-1"
          bucket     = "example"
        }
    ha:
      enabled: false
      replicas: 3
      # config is a raw string of default configuration when using a Stateful
      # deployment. Default is to use a Consul for its HA storage backend.
      # This should be HCL.
      config: |
        ui = true
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
        }
        storage "s3" {
          region     = "eu-central-1"
          bucket     = "example"
        }
        ha_storage "dynamodb" {
          ha_enabled = "true"
          region     = "eu-central-1"
          table      = "example"
        }
    # extraSecretEnvironmentVars:
    #   - envName: AWS_ACCESS_KEY_ID
    #     secretName: aws-credentials
    #     secretKey: AWS_ACCESS_KEY_ID
    #   - envName: AWS_SECRET_ACCESS_KEY
    #     secretName: aws-credentials
    #     secretKey: AWS_SECRET_ACCESS_KEY
